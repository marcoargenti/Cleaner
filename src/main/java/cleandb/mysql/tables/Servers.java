/**
 * This class is generated by jOOQ
 */
package cleandb.mysql.tables;

/**
 * MySQL Foreign Servers table
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Servers extends org.jooq.impl.TableImpl<cleandb.mysql.tables.records.ServersRecord> {

	private static final long serialVersionUID = 1667677158;

	/**
	 * The reference instance of <code>mysql.servers</code>
	 */
	public static final cleandb.mysql.tables.Servers SERVERS = new cleandb.mysql.tables.Servers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<cleandb.mysql.tables.records.ServersRecord> getRecordType() {
		return cleandb.mysql.tables.records.ServersRecord.class;
	}

	/**
	 * The column <code>mysql.servers.Server_name</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.String> SERVER_NAME = createField("Server_name", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.servers.Host</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.String> HOST = createField("Host", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.servers.Db</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.String> DB = createField("Db", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.servers.Username</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.String> USERNAME = createField("Username", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.servers.Password</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.String> PASSWORD = createField("Password", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.servers.Port</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.Integer> PORT = createField("Port", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.servers.Socket</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.String> SOCKET = createField("Socket", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.servers.Wrapper</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.String> WRAPPER = createField("Wrapper", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.servers.Owner</code>.
	 */
	public final org.jooq.TableField<cleandb.mysql.tables.records.ServersRecord, java.lang.String> OWNER = createField("Owner", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mysql.servers</code> table reference
	 */
	public Servers() {
		this("servers", null);
	}

	/**
	 * Create an aliased <code>mysql.servers</code> table reference
	 */
	public Servers(java.lang.String alias) {
		this(alias, cleandb.mysql.tables.Servers.SERVERS);
	}

	private Servers(java.lang.String alias, org.jooq.Table<cleandb.mysql.tables.records.ServersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Servers(java.lang.String alias, org.jooq.Table<cleandb.mysql.tables.records.ServersRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, cleandb.mysql.Mysql.MYSQL, aliased, parameters, "MySQL Foreign Servers table");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<cleandb.mysql.tables.records.ServersRecord> getPrimaryKey() {
		return cleandb.mysql.Keys.KEY_SERVERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<cleandb.mysql.tables.records.ServersRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<cleandb.mysql.tables.records.ServersRecord>>asList(cleandb.mysql.Keys.KEY_SERVERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public cleandb.mysql.tables.Servers as(java.lang.String alias) {
		return new cleandb.mysql.tables.Servers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public cleandb.mysql.tables.Servers rename(java.lang.String name) {
		return new cleandb.mysql.tables.Servers(name, null);
	}
}
