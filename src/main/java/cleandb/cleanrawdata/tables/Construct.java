/**
 * This class is generated by jOOQ
 */
package cleandb.cleanrawdata.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Construct extends org.jooq.impl.TableImpl<cleandb.cleanrawdata.tables.records.ConstructRecord> {

	private static final long serialVersionUID = -163573861;

	/**
	 * The reference instance of <code>CleanRawData.Construct</code>
	 */
	public static final cleandb.cleanrawdata.tables.Construct CONSTRUCT = new cleandb.cleanrawdata.tables.Construct();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<cleandb.cleanrawdata.tables.records.ConstructRecord> getRecordType() {
		return cleandb.cleanrawdata.tables.records.ConstructRecord.class;
	}

	/**
	 * The column <code>CleanRawData.Construct.ConstructID</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.ConstructRecord, byte[]> CONSTRUCTID = createField("ConstructID", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.Construct.SourceConstructID</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.ConstructRecord, java.lang.String> SOURCECONSTRUCTID = createField("SourceConstructID", org.jooq.impl.SQLDataType.VARCHAR.length(60000).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.Construct.ConstructType</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.ConstructRecord, java.lang.String> CONSTRUCTTYPE = createField("ConstructType", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>CleanRawData.Construct.ConstructName</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.ConstructRecord, java.lang.String> CONSTRUCTNAME = createField("ConstructName", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>CleanRawData.Construct.StartTime</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.ConstructRecord, java.sql.Timestamp> STARTTIME = createField("StartTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.Construct.EndTime</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.ConstructRecord, java.sql.Timestamp> ENDTIME = createField("EndTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.Construct.Duration</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.ConstructRecord, java.lang.Long> DURATION = createField("Duration", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.Construct.ProcessInstanceID</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.ConstructRecord, byte[]> PROCESSINSTANCEID = createField("ProcessInstanceID", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "");

	/**
	 * Create a <code>CleanRawData.Construct</code> table reference
	 */
	public Construct() {
		this("Construct", null);
	}

	/**
	 * Create an aliased <code>CleanRawData.Construct</code> table reference
	 */
	public Construct(java.lang.String alias) {
		this(alias, cleandb.cleanrawdata.tables.Construct.CONSTRUCT);
	}

	private Construct(java.lang.String alias, org.jooq.Table<cleandb.cleanrawdata.tables.records.ConstructRecord> aliased) {
		this(alias, aliased, null);
	}

	private Construct(java.lang.String alias, org.jooq.Table<cleandb.cleanrawdata.tables.records.ConstructRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, cleandb.cleanrawdata.Cleanrawdata.CLEANRAWDATA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<cleandb.cleanrawdata.tables.records.ConstructRecord> getPrimaryKey() {
		return cleandb.cleanrawdata.Keys.KEY_CONSTRUCT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<cleandb.cleanrawdata.tables.records.ConstructRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<cleandb.cleanrawdata.tables.records.ConstructRecord>>asList(cleandb.cleanrawdata.Keys.KEY_CONSTRUCT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<cleandb.cleanrawdata.tables.records.ConstructRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<cleandb.cleanrawdata.tables.records.ConstructRecord, ?>>asList(cleandb.cleanrawdata.Keys.CONSTRUCT_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public cleandb.cleanrawdata.tables.Construct as(java.lang.String alias) {
		return new cleandb.cleanrawdata.tables.Construct(alias, this);
	}

	/**
	 * Rename this table
	 */
	public cleandb.cleanrawdata.tables.Construct rename(java.lang.String name) {
		return new cleandb.cleanrawdata.tables.Construct(name, null);
	}
}
