/**
 * This class is generated by jOOQ
 */
package cleandb.cleanrawdata.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Environmentdata extends org.jooq.impl.TableImpl<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord> {

	private static final long serialVersionUID = 1878301319;

	/**
	 * The reference instance of <code>CleanRawData.EnvironmentData</code>
	 */
	public static final cleandb.cleanrawdata.tables.Environmentdata ENVIRONMENTDATA = new cleandb.cleanrawdata.tables.Environmentdata();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord> getRecordType() {
		return cleandb.cleanrawdata.tables.records.EnvironmentdataRecord.class;
	}

	/**
	 * The column <code>CleanRawData.EnvironmentData.ID</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.Time</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.sql.Timestamp> TIME = createField("Time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.LineNumber</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.lang.Integer> LINENUMBER = createField("LineNumber", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.CPUPercent</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.math.BigDecimal> CPUPERCENT = createField("CPUPercent", org.jooq.impl.SQLDataType.DECIMAL.precision(33, 30).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.MemoryUsed</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.math.BigDecimal> MEMORYUSED = createField("MemoryUsed", org.jooq.impl.SQLDataType.DECIMAL.precision(65, 6).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.MemoryTot</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.math.BigDecimal> MEMORYTOT = createField("MemoryTot", org.jooq.impl.SQLDataType.DECIMAL.precision(65, 6).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.MemoryPercent</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.math.BigDecimal> MEMORYPERCENT = createField("MemoryPercent", org.jooq.impl.SQLDataType.DECIMAL.precision(33, 30).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.NetworkIn</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.math.BigDecimal> NETWORKIN = createField("NetworkIn", org.jooq.impl.SQLDataType.DECIMAL.precision(65, 6).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.NetworkOut</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.math.BigDecimal> NETWORKOUT = createField("NetworkOut", org.jooq.impl.SQLDataType.DECIMAL.precision(65, 6).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.EnvironmentID</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, byte[]> ENVIRONMENTID = createField("EnvironmentID", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "");

	/**
	 * The column <code>CleanRawData.EnvironmentData.TrialID</code>.
	 */
	public final org.jooq.TableField<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, byte[]> TRIALID = createField("TrialID", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "");

	/**
	 * Create a <code>CleanRawData.EnvironmentData</code> table reference
	 */
	public Environmentdata() {
		this("EnvironmentData", null);
	}

	/**
	 * Create an aliased <code>CleanRawData.EnvironmentData</code> table reference
	 */
	public Environmentdata(java.lang.String alias) {
		this(alias, cleandb.cleanrawdata.tables.Environmentdata.ENVIRONMENTDATA);
	}

	private Environmentdata(java.lang.String alias, org.jooq.Table<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord> aliased) {
		this(alias, aliased, null);
	}

	private Environmentdata(java.lang.String alias, org.jooq.Table<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, cleandb.cleanrawdata.Cleanrawdata.CLEANRAWDATA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, java.lang.Integer> getIdentity() {
		return cleandb.cleanrawdata.Keys.IDENTITY_ENVIRONMENTDATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord> getPrimaryKey() {
		return cleandb.cleanrawdata.Keys.KEY_ENVIRONMENTDATA_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord>>asList(cleandb.cleanrawdata.Keys.KEY_ENVIRONMENTDATA_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<cleandb.cleanrawdata.tables.records.EnvironmentdataRecord, ?>>asList(cleandb.cleanrawdata.Keys.ENVIRONMENTDATA_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public cleandb.cleanrawdata.tables.Environmentdata as(java.lang.String alias) {
		return new cleandb.cleanrawdata.tables.Environmentdata(alias, this);
	}

	/**
	 * Rename this table
	 */
	public cleandb.cleanrawdata.tables.Environmentdata rename(java.lang.String name) {
		return new cleandb.cleanrawdata.tables.Environmentdata(name, null);
	}
}
