/**
 * This class is generated by jOOQ
 */
package cleandb.cleanrawdata.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcessRecord extends org.jooq.impl.UpdatableRecordImpl<cleandb.cleanrawdata.tables.records.ProcessRecord> implements org.jooq.Record8<byte[], java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, byte[]> {

	private static final long serialVersionUID = 1424439808;

	/**
	 * Setter for <code>CleanRawData.Process.ProcessInstanceID</code>.
	 */
	public void setProcessinstanceid(byte[] value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>CleanRawData.Process.ProcessInstanceID</code>.
	 */
	public byte[] getProcessinstanceid() {
		return (byte[]) getValue(0);
	}

	/**
	 * Setter for <code>CleanRawData.Process.SourceProcessInstanceID</code>.
	 */
	public void setSourceprocessinstanceid(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>CleanRawData.Process.SourceProcessInstanceID</code>.
	 */
	public java.lang.String getSourceprocessinstanceid() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>CleanRawData.Process.ProcessModelID</code>.
	 */
	public void setProcessmodelid(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>CleanRawData.Process.ProcessModelID</code>.
	 */
	public java.lang.String getProcessmodelid() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>CleanRawData.Process.ProcessName</code>.
	 */
	public void setProcessname(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>CleanRawData.Process.ProcessName</code>.
	 */
	public java.lang.String getProcessname() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>CleanRawData.Process.StartTime</code>.
	 */
	public void setStarttime(java.sql.Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>CleanRawData.Process.StartTime</code>.
	 */
	public java.sql.Timestamp getStarttime() {
		return (java.sql.Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>CleanRawData.Process.EndTime</code>.
	 */
	public void setEndtime(java.sql.Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>CleanRawData.Process.EndTime</code>.
	 */
	public java.sql.Timestamp getEndtime() {
		return (java.sql.Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>CleanRawData.Process.Duration</code>.
	 */
	public void setDuration(java.lang.Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>CleanRawData.Process.Duration</code>.
	 */
	public java.lang.Long getDuration() {
		return (java.lang.Long) getValue(6);
	}

	/**
	 * Setter for <code>CleanRawData.Process.TrialID</code>.
	 */
	public void setTrialid(byte[] value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>CleanRawData.Process.TrialID</code>.
	 */
	public byte[] getTrialid() {
		return (byte[]) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<byte[]> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<byte[], java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, byte[]> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<byte[], java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, byte[]> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field1() {
		return cleandb.cleanrawdata.tables.Process.PROCESS.PROCESSINSTANCEID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return cleandb.cleanrawdata.tables.Process.PROCESS.SOURCEPROCESSINSTANCEID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return cleandb.cleanrawdata.tables.Process.PROCESS.PROCESSMODELID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return cleandb.cleanrawdata.tables.Process.PROCESS.PROCESSNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field5() {
		return cleandb.cleanrawdata.tables.Process.PROCESS.STARTTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field6() {
		return cleandb.cleanrawdata.tables.Process.PROCESS.ENDTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field7() {
		return cleandb.cleanrawdata.tables.Process.PROCESS.DURATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field8() {
		return cleandb.cleanrawdata.tables.Process.PROCESS.TRIALID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value1() {
		return getProcessinstanceid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getSourceprocessinstanceid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getProcessmodelid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getProcessname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value5() {
		return getStarttime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value6() {
		return getEndtime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value7() {
		return getDuration();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value8() {
		return getTrialid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord value1(byte[] value) {
		setProcessinstanceid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord value2(java.lang.String value) {
		setSourceprocessinstanceid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord value3(java.lang.String value) {
		setProcessmodelid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord value4(java.lang.String value) {
		setProcessname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord value5(java.sql.Timestamp value) {
		setStarttime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord value6(java.sql.Timestamp value) {
		setEndtime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord value7(java.lang.Long value) {
		setDuration(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord value8(byte[] value) {
		setTrialid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcessRecord values(byte[] value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.sql.Timestamp value5, java.sql.Timestamp value6, java.lang.Long value7, byte[] value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ProcessRecord
	 */
	public ProcessRecord() {
		super(cleandb.cleanrawdata.tables.Process.PROCESS);
	}

	/**
	 * Create a detached, initialised ProcessRecord
	 */
	public ProcessRecord(byte[] processinstanceid, java.lang.String sourceprocessinstanceid, java.lang.String processmodelid, java.lang.String processname, java.sql.Timestamp starttime, java.sql.Timestamp endtime, java.lang.Long duration, byte[] trialid) {
		super(cleandb.cleanrawdata.tables.Process.PROCESS);

		setValue(0, processinstanceid);
		setValue(1, sourceprocessinstanceid);
		setValue(2, processmodelid);
		setValue(3, processname);
		setValue(4, starttime);
		setValue(5, endtime);
		setValue(6, duration);
		setValue(7, trialid);
	}
}
