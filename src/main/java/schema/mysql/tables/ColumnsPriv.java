/**
 * This class is generated by jOOQ
 */
package schema.mysql.tables;

/**
 * Column privileges
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ColumnsPriv extends org.jooq.impl.TableImpl<schema.mysql.tables.records.ColumnsPrivRecord> {

	private static final long serialVersionUID = -1217724228;

	/**
	 * The reference instance of <code>mysql.columns_priv</code>
	 */
	public static final schema.mysql.tables.ColumnsPriv COLUMNS_PRIV = new schema.mysql.tables.ColumnsPriv();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<schema.mysql.tables.records.ColumnsPrivRecord> getRecordType() {
		return schema.mysql.tables.records.ColumnsPrivRecord.class;
	}

	/**
	 * The column <code>mysql.columns_priv.Host</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.ColumnsPrivRecord, java.lang.String> HOST = createField("Host", org.jooq.impl.SQLDataType.CHAR.length(60).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.columns_priv.Db</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.ColumnsPrivRecord, java.lang.String> DB = createField("Db", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.columns_priv.User</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.ColumnsPrivRecord, java.lang.String> USER = createField("User", org.jooq.impl.SQLDataType.CHAR.length(16).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.columns_priv.Table_name</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.ColumnsPrivRecord, java.lang.String> TABLE_NAME = createField("Table_name", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.columns_priv.Column_name</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.ColumnsPrivRecord, java.lang.String> COLUMN_NAME = createField("Column_name", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.columns_priv.Timestamp</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.ColumnsPrivRecord, java.sql.Timestamp> TIMESTAMP = createField("Timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.columns_priv.Column_priv</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.ColumnsPrivRecord, java.lang.String> COLUMN_PRIV = createField("Column_priv", org.jooq.impl.SQLDataType.VARCHAR.length(31).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mysql.columns_priv</code> table reference
	 */
	public ColumnsPriv() {
		this("columns_priv", null);
	}

	/**
	 * Create an aliased <code>mysql.columns_priv</code> table reference
	 */
	public ColumnsPriv(java.lang.String alias) {
		this(alias, schema.mysql.tables.ColumnsPriv.COLUMNS_PRIV);
	}

	private ColumnsPriv(java.lang.String alias, org.jooq.Table<schema.mysql.tables.records.ColumnsPrivRecord> aliased) {
		this(alias, aliased, null);
	}

	private ColumnsPriv(java.lang.String alias, org.jooq.Table<schema.mysql.tables.records.ColumnsPrivRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, schema.mysql.Mysql.MYSQL, aliased, parameters, "Column privileges");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<schema.mysql.tables.records.ColumnsPrivRecord> getPrimaryKey() {
		return schema.mysql.Keys.KEY_COLUMNS_PRIV_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<schema.mysql.tables.records.ColumnsPrivRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<schema.mysql.tables.records.ColumnsPrivRecord>>asList(schema.mysql.Keys.KEY_COLUMNS_PRIV_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public schema.mysql.tables.ColumnsPriv as(java.lang.String alias) {
		return new schema.mysql.tables.ColumnsPriv(alias, this);
	}

	/**
	 * Rename this table
	 */
	public schema.mysql.tables.ColumnsPriv rename(java.lang.String name) {
		return new schema.mysql.tables.ColumnsPriv(name, null);
	}
}
