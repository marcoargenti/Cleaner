/**
 * This class is generated by jOOQ
 */
package schema.mysql.tables;

/**
 * MySQL plugins
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Plugin extends org.jooq.impl.TableImpl<schema.mysql.tables.records.PluginRecord> {

	private static final long serialVersionUID = -2087873517;

	/**
	 * The reference instance of <code>mysql.plugin</code>
	 */
	public static final schema.mysql.tables.Plugin PLUGIN = new schema.mysql.tables.Plugin();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<schema.mysql.tables.records.PluginRecord> getRecordType() {
		return schema.mysql.tables.records.PluginRecord.class;
	}

	/**
	 * The column <code>mysql.plugin.name</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.PluginRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.plugin.dl</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.PluginRecord, java.lang.String> DL = createField("dl", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mysql.plugin</code> table reference
	 */
	public Plugin() {
		this("plugin", null);
	}

	/**
	 * Create an aliased <code>mysql.plugin</code> table reference
	 */
	public Plugin(java.lang.String alias) {
		this(alias, schema.mysql.tables.Plugin.PLUGIN);
	}

	private Plugin(java.lang.String alias, org.jooq.Table<schema.mysql.tables.records.PluginRecord> aliased) {
		this(alias, aliased, null);
	}

	private Plugin(java.lang.String alias, org.jooq.Table<schema.mysql.tables.records.PluginRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, schema.mysql.Mysql.MYSQL, aliased, parameters, "MySQL plugins");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<schema.mysql.tables.records.PluginRecord> getPrimaryKey() {
		return schema.mysql.Keys.KEY_PLUGIN_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<schema.mysql.tables.records.PluginRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<schema.mysql.tables.records.PluginRecord>>asList(schema.mysql.Keys.KEY_PLUGIN_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public schema.mysql.tables.Plugin as(java.lang.String alias) {
		return new schema.mysql.tables.Plugin(alias, this);
	}

	/**
	 * Rename this table
	 */
	public schema.mysql.tables.Plugin rename(java.lang.String name) {
		return new schema.mysql.tables.Plugin(name, null);
	}
}
