/**
 * This class is generated by jOOQ
 */
package schema.mysql.tables;

/**
 * Events
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Event extends org.jooq.impl.TableImpl<schema.mysql.tables.records.EventRecord> {

	private static final long serialVersionUID = 1466105280;

	/**
	 * The reference instance of <code>mysql.event</code>
	 */
	public static final schema.mysql.tables.Event EVENT = new schema.mysql.tables.Event();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<schema.mysql.tables.records.EventRecord> getRecordType() {
		return schema.mysql.tables.records.EventRecord.class;
	}

	/**
	 * The column <code>mysql.event.db</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> DB = createField("db", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.event.name</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.event.body</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, byte[]> BODY = createField("body", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * The column <code>mysql.event.definer</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> DEFINER = createField("definer", org.jooq.impl.SQLDataType.CHAR.length(77).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.event.execute_at</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.sql.Timestamp> EXECUTE_AT = createField("execute_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mysql.event.interval_value</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.Integer> INTERVAL_VALUE = createField("interval_value", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mysql.event.interval_field</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, schema.mysql.enums.EventIntervalField> INTERVAL_FIELD = createField("interval_field", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(schema.mysql.enums.EventIntervalField.class), this, "");

	/**
	 * The column <code>mysql.event.created</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.event.modified</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.sql.Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.event.last_executed</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.sql.Timestamp> LAST_EXECUTED = createField("last_executed", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mysql.event.starts</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.sql.Timestamp> STARTS = createField("starts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mysql.event.ends</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.sql.Timestamp> ENDS = createField("ends", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mysql.event.status</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, schema.mysql.enums.EventStatus> STATUS = createField("status", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(schema.mysql.enums.EventStatus.class), this, "");

	/**
	 * The column <code>mysql.event.on_completion</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, schema.mysql.enums.EventOnCompletion> ON_COMPLETION = createField("on_completion", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(schema.mysql.enums.EventOnCompletion.class), this, "");

	/**
	 * The column <code>mysql.event.sql_mode</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> SQL_MODE = createField("sql_mode", org.jooq.impl.SQLDataType.VARCHAR.length(478).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.event.comment</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.event.originator</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, org.jooq.types.UInteger> ORIGINATOR = createField("originator", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>mysql.event.time_zone</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> TIME_ZONE = createField("time_zone", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.event.character_set_client</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> CHARACTER_SET_CLIENT = createField("character_set_client", org.jooq.impl.SQLDataType.CHAR.length(32), this, "");

	/**
	 * The column <code>mysql.event.collation_connection</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> COLLATION_CONNECTION = createField("collation_connection", org.jooq.impl.SQLDataType.CHAR.length(32), this, "");

	/**
	 * The column <code>mysql.event.db_collation</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, java.lang.String> DB_COLLATION = createField("db_collation", org.jooq.impl.SQLDataType.CHAR.length(32), this, "");

	/**
	 * The column <code>mysql.event.body_utf8</code>.
	 */
	public final org.jooq.TableField<schema.mysql.tables.records.EventRecord, byte[]> BODY_UTF8 = createField("body_utf8", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * Create a <code>mysql.event</code> table reference
	 */
	public Event() {
		this("event", null);
	}

	/**
	 * Create an aliased <code>mysql.event</code> table reference
	 */
	public Event(java.lang.String alias) {
		this(alias, schema.mysql.tables.Event.EVENT);
	}

	private Event(java.lang.String alias, org.jooq.Table<schema.mysql.tables.records.EventRecord> aliased) {
		this(alias, aliased, null);
	}

	private Event(java.lang.String alias, org.jooq.Table<schema.mysql.tables.records.EventRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, schema.mysql.Mysql.MYSQL, aliased, parameters, "Events");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<schema.mysql.tables.records.EventRecord> getPrimaryKey() {
		return schema.mysql.Keys.KEY_EVENT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<schema.mysql.tables.records.EventRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<schema.mysql.tables.records.EventRecord>>asList(schema.mysql.Keys.KEY_EVENT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public schema.mysql.tables.Event as(java.lang.String alias) {
		return new schema.mysql.tables.Event(alias, this);
	}

	/**
	 * Rename this table
	 */
	public schema.mysql.tables.Event rename(java.lang.String name) {
		return new schema.mysql.tables.Event(name, null);
	}
}
