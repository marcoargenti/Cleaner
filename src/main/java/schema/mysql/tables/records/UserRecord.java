/**
 * This class is generated by jOOQ
 */
package schema.mysql.tables.records;

/**
 * Users and global privileges
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends org.jooq.impl.UpdatableRecordImpl<schema.mysql.tables.records.UserRecord> {

	private static final long serialVersionUID = 926031171;

	/**
	 * Setter for <code>mysql.user.Host</code>.
	 */
	public void setHost(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>mysql.user.Host</code>.
	 */
	public java.lang.String getHost() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>mysql.user.User</code>.
	 */
	public void setUser(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>mysql.user.User</code>.
	 */
	public java.lang.String getUser() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>mysql.user.Password</code>.
	 */
	public void setPassword(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>mysql.user.Password</code>.
	 */
	public java.lang.String getPassword() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>mysql.user.Select_priv</code>.
	 */
	public void setSelectPriv(schema.mysql.enums.UserSelectPriv value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>mysql.user.Select_priv</code>.
	 */
	public schema.mysql.enums.UserSelectPriv getSelectPriv() {
		return (schema.mysql.enums.UserSelectPriv) getValue(3);
	}

	/**
	 * Setter for <code>mysql.user.Insert_priv</code>.
	 */
	public void setInsertPriv(schema.mysql.enums.UserInsertPriv value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>mysql.user.Insert_priv</code>.
	 */
	public schema.mysql.enums.UserInsertPriv getInsertPriv() {
		return (schema.mysql.enums.UserInsertPriv) getValue(4);
	}

	/**
	 * Setter for <code>mysql.user.Update_priv</code>.
	 */
	public void setUpdatePriv(schema.mysql.enums.UserUpdatePriv value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>mysql.user.Update_priv</code>.
	 */
	public schema.mysql.enums.UserUpdatePriv getUpdatePriv() {
		return (schema.mysql.enums.UserUpdatePriv) getValue(5);
	}

	/**
	 * Setter for <code>mysql.user.Delete_priv</code>.
	 */
	public void setDeletePriv(schema.mysql.enums.UserDeletePriv value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>mysql.user.Delete_priv</code>.
	 */
	public schema.mysql.enums.UserDeletePriv getDeletePriv() {
		return (schema.mysql.enums.UserDeletePriv) getValue(6);
	}

	/**
	 * Setter for <code>mysql.user.Create_priv</code>.
	 */
	public void setCreatePriv(schema.mysql.enums.UserCreatePriv value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>mysql.user.Create_priv</code>.
	 */
	public schema.mysql.enums.UserCreatePriv getCreatePriv() {
		return (schema.mysql.enums.UserCreatePriv) getValue(7);
	}

	/**
	 * Setter for <code>mysql.user.Drop_priv</code>.
	 */
	public void setDropPriv(schema.mysql.enums.UserDropPriv value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>mysql.user.Drop_priv</code>.
	 */
	public schema.mysql.enums.UserDropPriv getDropPriv() {
		return (schema.mysql.enums.UserDropPriv) getValue(8);
	}

	/**
	 * Setter for <code>mysql.user.Reload_priv</code>.
	 */
	public void setReloadPriv(schema.mysql.enums.UserReloadPriv value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>mysql.user.Reload_priv</code>.
	 */
	public schema.mysql.enums.UserReloadPriv getReloadPriv() {
		return (schema.mysql.enums.UserReloadPriv) getValue(9);
	}

	/**
	 * Setter for <code>mysql.user.Shutdown_priv</code>.
	 */
	public void setShutdownPriv(schema.mysql.enums.UserShutdownPriv value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>mysql.user.Shutdown_priv</code>.
	 */
	public schema.mysql.enums.UserShutdownPriv getShutdownPriv() {
		return (schema.mysql.enums.UserShutdownPriv) getValue(10);
	}

	/**
	 * Setter for <code>mysql.user.Process_priv</code>.
	 */
	public void setProcessPriv(schema.mysql.enums.UserProcessPriv value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>mysql.user.Process_priv</code>.
	 */
	public schema.mysql.enums.UserProcessPriv getProcessPriv() {
		return (schema.mysql.enums.UserProcessPriv) getValue(11);
	}

	/**
	 * Setter for <code>mysql.user.File_priv</code>.
	 */
	public void setFilePriv(schema.mysql.enums.UserFilePriv value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>mysql.user.File_priv</code>.
	 */
	public schema.mysql.enums.UserFilePriv getFilePriv() {
		return (schema.mysql.enums.UserFilePriv) getValue(12);
	}

	/**
	 * Setter for <code>mysql.user.Grant_priv</code>.
	 */
	public void setGrantPriv(schema.mysql.enums.UserGrantPriv value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>mysql.user.Grant_priv</code>.
	 */
	public schema.mysql.enums.UserGrantPriv getGrantPriv() {
		return (schema.mysql.enums.UserGrantPriv) getValue(13);
	}

	/**
	 * Setter for <code>mysql.user.References_priv</code>.
	 */
	public void setReferencesPriv(schema.mysql.enums.UserReferencesPriv value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>mysql.user.References_priv</code>.
	 */
	public schema.mysql.enums.UserReferencesPriv getReferencesPriv() {
		return (schema.mysql.enums.UserReferencesPriv) getValue(14);
	}

	/**
	 * Setter for <code>mysql.user.Index_priv</code>.
	 */
	public void setIndexPriv(schema.mysql.enums.UserIndexPriv value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>mysql.user.Index_priv</code>.
	 */
	public schema.mysql.enums.UserIndexPriv getIndexPriv() {
		return (schema.mysql.enums.UserIndexPriv) getValue(15);
	}

	/**
	 * Setter for <code>mysql.user.Alter_priv</code>.
	 */
	public void setAlterPriv(schema.mysql.enums.UserAlterPriv value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>mysql.user.Alter_priv</code>.
	 */
	public schema.mysql.enums.UserAlterPriv getAlterPriv() {
		return (schema.mysql.enums.UserAlterPriv) getValue(16);
	}

	/**
	 * Setter for <code>mysql.user.Show_db_priv</code>.
	 */
	public void setShowDbPriv(schema.mysql.enums.UserShowDbPriv value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>mysql.user.Show_db_priv</code>.
	 */
	public schema.mysql.enums.UserShowDbPriv getShowDbPriv() {
		return (schema.mysql.enums.UserShowDbPriv) getValue(17);
	}

	/**
	 * Setter for <code>mysql.user.Super_priv</code>.
	 */
	public void setSuperPriv(schema.mysql.enums.UserSuperPriv value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>mysql.user.Super_priv</code>.
	 */
	public schema.mysql.enums.UserSuperPriv getSuperPriv() {
		return (schema.mysql.enums.UserSuperPriv) getValue(18);
	}

	/**
	 * Setter for <code>mysql.user.Create_tmp_table_priv</code>.
	 */
	public void setCreateTmpTablePriv(schema.mysql.enums.UserCreateTmpTablePriv value) {
		setValue(19, value);
	}

	/**
	 * Getter for <code>mysql.user.Create_tmp_table_priv</code>.
	 */
	public schema.mysql.enums.UserCreateTmpTablePriv getCreateTmpTablePriv() {
		return (schema.mysql.enums.UserCreateTmpTablePriv) getValue(19);
	}

	/**
	 * Setter for <code>mysql.user.Lock_tables_priv</code>.
	 */
	public void setLockTablesPriv(schema.mysql.enums.UserLockTablesPriv value) {
		setValue(20, value);
	}

	/**
	 * Getter for <code>mysql.user.Lock_tables_priv</code>.
	 */
	public schema.mysql.enums.UserLockTablesPriv getLockTablesPriv() {
		return (schema.mysql.enums.UserLockTablesPriv) getValue(20);
	}

	/**
	 * Setter for <code>mysql.user.Execute_priv</code>.
	 */
	public void setExecutePriv(schema.mysql.enums.UserExecutePriv value) {
		setValue(21, value);
	}

	/**
	 * Getter for <code>mysql.user.Execute_priv</code>.
	 */
	public schema.mysql.enums.UserExecutePriv getExecutePriv() {
		return (schema.mysql.enums.UserExecutePriv) getValue(21);
	}

	/**
	 * Setter for <code>mysql.user.Repl_slave_priv</code>.
	 */
	public void setReplSlavePriv(schema.mysql.enums.UserReplSlavePriv value) {
		setValue(22, value);
	}

	/**
	 * Getter for <code>mysql.user.Repl_slave_priv</code>.
	 */
	public schema.mysql.enums.UserReplSlavePriv getReplSlavePriv() {
		return (schema.mysql.enums.UserReplSlavePriv) getValue(22);
	}

	/**
	 * Setter for <code>mysql.user.Repl_client_priv</code>.
	 */
	public void setReplClientPriv(schema.mysql.enums.UserReplClientPriv value) {
		setValue(23, value);
	}

	/**
	 * Getter for <code>mysql.user.Repl_client_priv</code>.
	 */
	public schema.mysql.enums.UserReplClientPriv getReplClientPriv() {
		return (schema.mysql.enums.UserReplClientPriv) getValue(23);
	}

	/**
	 * Setter for <code>mysql.user.Create_view_priv</code>.
	 */
	public void setCreateViewPriv(schema.mysql.enums.UserCreateViewPriv value) {
		setValue(24, value);
	}

	/**
	 * Getter for <code>mysql.user.Create_view_priv</code>.
	 */
	public schema.mysql.enums.UserCreateViewPriv getCreateViewPriv() {
		return (schema.mysql.enums.UserCreateViewPriv) getValue(24);
	}

	/**
	 * Setter for <code>mysql.user.Show_view_priv</code>.
	 */
	public void setShowViewPriv(schema.mysql.enums.UserShowViewPriv value) {
		setValue(25, value);
	}

	/**
	 * Getter for <code>mysql.user.Show_view_priv</code>.
	 */
	public schema.mysql.enums.UserShowViewPriv getShowViewPriv() {
		return (schema.mysql.enums.UserShowViewPriv) getValue(25);
	}

	/**
	 * Setter for <code>mysql.user.Create_routine_priv</code>.
	 */
	public void setCreateRoutinePriv(schema.mysql.enums.UserCreateRoutinePriv value) {
		setValue(26, value);
	}

	/**
	 * Getter for <code>mysql.user.Create_routine_priv</code>.
	 */
	public schema.mysql.enums.UserCreateRoutinePriv getCreateRoutinePriv() {
		return (schema.mysql.enums.UserCreateRoutinePriv) getValue(26);
	}

	/**
	 * Setter for <code>mysql.user.Alter_routine_priv</code>.
	 */
	public void setAlterRoutinePriv(schema.mysql.enums.UserAlterRoutinePriv value) {
		setValue(27, value);
	}

	/**
	 * Getter for <code>mysql.user.Alter_routine_priv</code>.
	 */
	public schema.mysql.enums.UserAlterRoutinePriv getAlterRoutinePriv() {
		return (schema.mysql.enums.UserAlterRoutinePriv) getValue(27);
	}

	/**
	 * Setter for <code>mysql.user.Create_user_priv</code>.
	 */
	public void setCreateUserPriv(schema.mysql.enums.UserCreateUserPriv value) {
		setValue(28, value);
	}

	/**
	 * Getter for <code>mysql.user.Create_user_priv</code>.
	 */
	public schema.mysql.enums.UserCreateUserPriv getCreateUserPriv() {
		return (schema.mysql.enums.UserCreateUserPriv) getValue(28);
	}

	/**
	 * Setter for <code>mysql.user.Event_priv</code>.
	 */
	public void setEventPriv(schema.mysql.enums.UserEventPriv value) {
		setValue(29, value);
	}

	/**
	 * Getter for <code>mysql.user.Event_priv</code>.
	 */
	public schema.mysql.enums.UserEventPriv getEventPriv() {
		return (schema.mysql.enums.UserEventPriv) getValue(29);
	}

	/**
	 * Setter for <code>mysql.user.Trigger_priv</code>.
	 */
	public void setTriggerPriv(schema.mysql.enums.UserTriggerPriv value) {
		setValue(30, value);
	}

	/**
	 * Getter for <code>mysql.user.Trigger_priv</code>.
	 */
	public schema.mysql.enums.UserTriggerPriv getTriggerPriv() {
		return (schema.mysql.enums.UserTriggerPriv) getValue(30);
	}

	/**
	 * Setter for <code>mysql.user.Create_tablespace_priv</code>.
	 */
	public void setCreateTablespacePriv(schema.mysql.enums.UserCreateTablespacePriv value) {
		setValue(31, value);
	}

	/**
	 * Getter for <code>mysql.user.Create_tablespace_priv</code>.
	 */
	public schema.mysql.enums.UserCreateTablespacePriv getCreateTablespacePriv() {
		return (schema.mysql.enums.UserCreateTablespacePriv) getValue(31);
	}

	/**
	 * Setter for <code>mysql.user.ssl_type</code>.
	 */
	public void setSslType(schema.mysql.enums.UserSslType value) {
		setValue(32, value);
	}

	/**
	 * Getter for <code>mysql.user.ssl_type</code>.
	 */
	public schema.mysql.enums.UserSslType getSslType() {
		return (schema.mysql.enums.UserSslType) getValue(32);
	}

	/**
	 * Setter for <code>mysql.user.ssl_cipher</code>.
	 */
	public void setSslCipher(byte[] value) {
		setValue(33, value);
	}

	/**
	 * Getter for <code>mysql.user.ssl_cipher</code>.
	 */
	public byte[] getSslCipher() {
		return (byte[]) getValue(33);
	}

	/**
	 * Setter for <code>mysql.user.x509_issuer</code>.
	 */
	public void setX509Issuer(byte[] value) {
		setValue(34, value);
	}

	/**
	 * Getter for <code>mysql.user.x509_issuer</code>.
	 */
	public byte[] getX509Issuer() {
		return (byte[]) getValue(34);
	}

	/**
	 * Setter for <code>mysql.user.x509_subject</code>.
	 */
	public void setX509Subject(byte[] value) {
		setValue(35, value);
	}

	/**
	 * Getter for <code>mysql.user.x509_subject</code>.
	 */
	public byte[] getX509Subject() {
		return (byte[]) getValue(35);
	}

	/**
	 * Setter for <code>mysql.user.max_questions</code>.
	 */
	public void setMaxQuestions(org.jooq.types.UInteger value) {
		setValue(36, value);
	}

	/**
	 * Getter for <code>mysql.user.max_questions</code>.
	 */
	public org.jooq.types.UInteger getMaxQuestions() {
		return (org.jooq.types.UInteger) getValue(36);
	}

	/**
	 * Setter for <code>mysql.user.max_updates</code>.
	 */
	public void setMaxUpdates(org.jooq.types.UInteger value) {
		setValue(37, value);
	}

	/**
	 * Getter for <code>mysql.user.max_updates</code>.
	 */
	public org.jooq.types.UInteger getMaxUpdates() {
		return (org.jooq.types.UInteger) getValue(37);
	}

	/**
	 * Setter for <code>mysql.user.max_connections</code>.
	 */
	public void setMaxConnections(org.jooq.types.UInteger value) {
		setValue(38, value);
	}

	/**
	 * Getter for <code>mysql.user.max_connections</code>.
	 */
	public org.jooq.types.UInteger getMaxConnections() {
		return (org.jooq.types.UInteger) getValue(38);
	}

	/**
	 * Setter for <code>mysql.user.max_user_connections</code>.
	 */
	public void setMaxUserConnections(org.jooq.types.UInteger value) {
		setValue(39, value);
	}

	/**
	 * Getter for <code>mysql.user.max_user_connections</code>.
	 */
	public org.jooq.types.UInteger getMaxUserConnections() {
		return (org.jooq.types.UInteger) getValue(39);
	}

	/**
	 * Setter for <code>mysql.user.plugin</code>.
	 */
	public void setPlugin(java.lang.String value) {
		setValue(40, value);
	}

	/**
	 * Getter for <code>mysql.user.plugin</code>.
	 */
	public java.lang.String getPlugin() {
		return (java.lang.String) getValue(40);
	}

	/**
	 * Setter for <code>mysql.user.authentication_string</code>.
	 */
	public void setAuthenticationString(java.lang.String value) {
		setValue(41, value);
	}

	/**
	 * Getter for <code>mysql.user.authentication_string</code>.
	 */
	public java.lang.String getAuthenticationString() {
		return (java.lang.String) getValue(41);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record2<java.lang.String, java.lang.String> key() {
		return (org.jooq.Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(schema.mysql.tables.User.USER);
	}

	/**
	 * Create a detached, initialised UserRecord
	 */
	public UserRecord(java.lang.String host, java.lang.String user, java.lang.String password, schema.mysql.enums.UserSelectPriv selectPriv, schema.mysql.enums.UserInsertPriv insertPriv, schema.mysql.enums.UserUpdatePriv updatePriv, schema.mysql.enums.UserDeletePriv deletePriv, schema.mysql.enums.UserCreatePriv createPriv, schema.mysql.enums.UserDropPriv dropPriv, schema.mysql.enums.UserReloadPriv reloadPriv, schema.mysql.enums.UserShutdownPriv shutdownPriv, schema.mysql.enums.UserProcessPriv processPriv, schema.mysql.enums.UserFilePriv filePriv, schema.mysql.enums.UserGrantPriv grantPriv, schema.mysql.enums.UserReferencesPriv referencesPriv, schema.mysql.enums.UserIndexPriv indexPriv, schema.mysql.enums.UserAlterPriv alterPriv, schema.mysql.enums.UserShowDbPriv showDbPriv, schema.mysql.enums.UserSuperPriv superPriv, schema.mysql.enums.UserCreateTmpTablePriv createTmpTablePriv, schema.mysql.enums.UserLockTablesPriv lockTablesPriv, schema.mysql.enums.UserExecutePriv executePriv, schema.mysql.enums.UserReplSlavePriv replSlavePriv, schema.mysql.enums.UserReplClientPriv replClientPriv, schema.mysql.enums.UserCreateViewPriv createViewPriv, schema.mysql.enums.UserShowViewPriv showViewPriv, schema.mysql.enums.UserCreateRoutinePriv createRoutinePriv, schema.mysql.enums.UserAlterRoutinePriv alterRoutinePriv, schema.mysql.enums.UserCreateUserPriv createUserPriv, schema.mysql.enums.UserEventPriv eventPriv, schema.mysql.enums.UserTriggerPriv triggerPriv, schema.mysql.enums.UserCreateTablespacePriv createTablespacePriv, schema.mysql.enums.UserSslType sslType, byte[] sslCipher, byte[] x509Issuer, byte[] x509Subject, org.jooq.types.UInteger maxQuestions, org.jooq.types.UInteger maxUpdates, org.jooq.types.UInteger maxConnections, org.jooq.types.UInteger maxUserConnections, java.lang.String plugin, java.lang.String authenticationString) {
		super(schema.mysql.tables.User.USER);

		setValue(0, host);
		setValue(1, user);
		setValue(2, password);
		setValue(3, selectPriv);
		setValue(4, insertPriv);
		setValue(5, updatePriv);
		setValue(6, deletePriv);
		setValue(7, createPriv);
		setValue(8, dropPriv);
		setValue(9, reloadPriv);
		setValue(10, shutdownPriv);
		setValue(11, processPriv);
		setValue(12, filePriv);
		setValue(13, grantPriv);
		setValue(14, referencesPriv);
		setValue(15, indexPriv);
		setValue(16, alterPriv);
		setValue(17, showDbPriv);
		setValue(18, superPriv);
		setValue(19, createTmpTablePriv);
		setValue(20, lockTablesPriv);
		setValue(21, executePriv);
		setValue(22, replSlavePriv);
		setValue(23, replClientPriv);
		setValue(24, createViewPriv);
		setValue(25, showViewPriv);
		setValue(26, createRoutinePriv);
		setValue(27, alterRoutinePriv);
		setValue(28, createUserPriv);
		setValue(29, eventPriv);
		setValue(30, triggerPriv);
		setValue(31, createTablespacePriv);
		setValue(32, sslType);
		setValue(33, sslCipher);
		setValue(34, x509Issuer);
		setValue(35, x509Subject);
		setValue(36, maxQuestions);
		setValue(37, maxUpdates);
		setValue(38, maxConnections);
		setValue(39, maxUserConnections);
		setValue(40, plugin);
		setValue(41, authenticationString);
	}
}
