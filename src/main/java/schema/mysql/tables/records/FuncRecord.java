/**
 * This class is generated by jOOQ
 */
package schema.mysql.tables.records;

/**
 * User defined functions
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FuncRecord extends org.jooq.impl.UpdatableRecordImpl<schema.mysql.tables.records.FuncRecord> implements org.jooq.Record4<java.lang.String, java.lang.Byte, java.lang.String, schema.mysql.enums.FuncType> {

	private static final long serialVersionUID = 927688284;

	/**
	 * Setter for <code>mysql.func.name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>mysql.func.name</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>mysql.func.ret</code>.
	 */
	public void setRet(java.lang.Byte value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>mysql.func.ret</code>.
	 */
	public java.lang.Byte getRet() {
		return (java.lang.Byte) getValue(1);
	}

	/**
	 * Setter for <code>mysql.func.dl</code>.
	 */
	public void setDl(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>mysql.func.dl</code>.
	 */
	public java.lang.String getDl() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>mysql.func.type</code>.
	 */
	public void setType(schema.mysql.enums.FuncType value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>mysql.func.type</code>.
	 */
	public schema.mysql.enums.FuncType getType() {
		return (schema.mysql.enums.FuncType) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.String, java.lang.Byte, java.lang.String, schema.mysql.enums.FuncType> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.String, java.lang.Byte, java.lang.String, schema.mysql.enums.FuncType> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return schema.mysql.tables.Func.FUNC.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field2() {
		return schema.mysql.tables.Func.FUNC.RET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return schema.mysql.tables.Func.FUNC.DL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<schema.mysql.enums.FuncType> field4() {
		return schema.mysql.tables.Func.FUNC.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value2() {
		return getRet();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getDl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public schema.mysql.enums.FuncType value4() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FuncRecord value1(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FuncRecord value2(java.lang.Byte value) {
		setRet(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FuncRecord value3(java.lang.String value) {
		setDl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FuncRecord value4(schema.mysql.enums.FuncType value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FuncRecord values(java.lang.String value1, java.lang.Byte value2, java.lang.String value3, schema.mysql.enums.FuncType value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FuncRecord
	 */
	public FuncRecord() {
		super(schema.mysql.tables.Func.FUNC);
	}

	/**
	 * Create a detached, initialised FuncRecord
	 */
	public FuncRecord(java.lang.String name, java.lang.Byte ret, java.lang.String dl, schema.mysql.enums.FuncType type) {
		super(schema.mysql.tables.Func.FUNC);

		setValue(0, name);
		setValue(1, ret);
		setValue(2, dl);
		setValue(3, type);
	}
}
