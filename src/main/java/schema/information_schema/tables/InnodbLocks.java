/**
 * This class is generated by jOOQ
 */
package schema.information_schema.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbLocks extends org.jooq.impl.TableImpl<schema.information_schema.tables.records.InnodbLocksRecord> {

	private static final long serialVersionUID = -1720093378;

	/**
	 * The reference instance of <code>information_schema.INNODB_LOCKS</code>
	 */
	public static final schema.information_schema.tables.InnodbLocks INNODB_LOCKS = new schema.information_schema.tables.InnodbLocks();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<schema.information_schema.tables.records.InnodbLocksRecord> getRecordType() {
		return schema.information_schema.tables.records.InnodbLocksRecord.class;
	}

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_id</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, java.lang.String> LOCK_ID = createField("lock_id", org.jooq.impl.SQLDataType.VARCHAR.length(81).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_trx_id</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, java.lang.String> LOCK_TRX_ID = createField("lock_trx_id", org.jooq.impl.SQLDataType.VARCHAR.length(18).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_mode</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, java.lang.String> LOCK_MODE = createField("lock_mode", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_type</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, java.lang.String> LOCK_TYPE = createField("lock_type", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_table</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, java.lang.String> LOCK_TABLE = createField("lock_table", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_index</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, java.lang.String> LOCK_INDEX = createField("lock_index", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_space</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, org.jooq.types.ULong> LOCK_SPACE = createField("lock_space", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_page</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, org.jooq.types.ULong> LOCK_PAGE = createField("lock_page", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_rec</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, org.jooq.types.ULong> LOCK_REC = createField("lock_rec", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>information_schema.INNODB_LOCKS.lock_data</code>.
	 */
	public final org.jooq.TableField<schema.information_schema.tables.records.InnodbLocksRecord, java.lang.String> LOCK_DATA = createField("lock_data", org.jooq.impl.SQLDataType.VARCHAR.length(8192), this, "");

	/**
	 * Create a <code>information_schema.INNODB_LOCKS</code> table reference
	 */
	public InnodbLocks() {
		this("INNODB_LOCKS", null);
	}

	/**
	 * Create an aliased <code>information_schema.INNODB_LOCKS</code> table reference
	 */
	public InnodbLocks(java.lang.String alias) {
		this(alias, schema.information_schema.tables.InnodbLocks.INNODB_LOCKS);
	}

	private InnodbLocks(java.lang.String alias, org.jooq.Table<schema.information_schema.tables.records.InnodbLocksRecord> aliased) {
		this(alias, aliased, null);
	}

	private InnodbLocks(java.lang.String alias, org.jooq.Table<schema.information_schema.tables.records.InnodbLocksRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, schema.information_schema.InformationSchema.INFORMATION_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public schema.information_schema.tables.InnodbLocks as(java.lang.String alias) {
		return new schema.information_schema.tables.InnodbLocks(alias, this);
	}

	/**
	 * Rename this table
	 */
	public schema.information_schema.tables.InnodbLocks rename(java.lang.String name) {
		return new schema.information_schema.tables.InnodbLocks(name, null);
	}
}
